environment:

  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.

    #- PYTHON: "C:\\Python27"
    #- PYTHON: "C:\\Python33"
    #- PYTHON: "C:\\Python34"
    #- PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python27-x64"
    #- PYTHON: "C:\\Python33-x64"
    #  DISTUTILS_USE_SDK: "1"
    #- PYTHON: "C:\\Python34-x64"
    #  DISTUTILS_USE_SDK: "1"
    #- PYTHON: "C:\\Python35-x64"
    #- PYTHON: "C:\\Python36-x64"

init:
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - ps: Start-FileDownload "https://download.microsoft.com/download/6/A/A/6AA4EDFF-645B-48C5-81CC-ED5963AEAD48/vc_redist.x64.exe" -FileName "C:\\Python27-x64\\vcredist_x64.exe"
  - set PATH=%PYTHON%\\Lib\\site-packages\\scipy\\extra-dll;%PATH%
  
install:
  # We need wheel installed to build wheels
  - "git clone -q --branch=master https://github.com/bumps/bumps.git C:\\projects\\bumps"
  #- "git clone -q --branch=master https://github.com/pkienzle/periodictable.git C:\\projects\\periodictable"
  #- "%PYTHON%\\python.exe -m pip install pyinstaller"
  - "%PYTHON%\\python.exe -m pip install -r requirements.txt"
  - "%PYTHON%\\python.exe -m pip install -r rtd-requirements"
  - "%PYTHON%\\python.exe -m pip install pyinstaller"
  - "cd C:\\projects\\bumps"
  - "%PYTHON%\\python.exe setup.py install"
  - "cd C:\\projects\\refl1d"
  
build: off

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  #- "build.cmd %PYTHON%\\python.exe setup.py test"

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  #- "build.cmd %PYTHON%\\python.exe setup.py bdist_wheel"
  #- "build.cmd %PYTHON%\\python.exe -m PyInstaller --onefile bin/refl1d_gui.py"
  #- "build.cmd %PYTHON%\\python.exe -m PyInstaller --hidden-import bumps.cli --hidden-import scipy.special bin/refl1d_gui.py"
  - "build.cmd %PYTHON%\\python.exe setup.py build_ext --inplace"
  - "build.cmd %PYTHON%\\python.exe -m PyInstaller refl1d_gui.spec"
  #- "build.cmd %PYTHON%\\python.exe master_builder.py --start zip --force"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  #- path: dist\*
  #- path: \*.exe
  - path: dist
  - path: refl1d_gui.spec

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.

on_finish:
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

deploy:
  release: refl1d-$(APPVEYOR_REPO_TAG_NAME)
  tag: $(APPVEYOR_REPO_TAG_NAME)
  description: 'Release description'
  provider: GitHub
  auth_token:
    secure: dgPaEwXNPKK3tEAqCXFQ+7DrjkXv2TquFYkjHrsgt4M5I16HoieAaqOkm2Q2WAm3
  artifact: dist.zip            # upload all NuGet packages to release assets
  draft: false
  prerelease: false
  on:
    #branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only (if true)
